// <auto-generated />
using System;
using MeetingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeetingApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250116063509_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("MeetingApp.Models.Domain.Meetings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 1, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Weekly team sync to discuss ongoing tasks and blockers.",
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            Name = "Team Sync",
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Initial meeting to discuss project goals, scope, and timelines.",
                            EndTime = new TimeSpan(0, 15, 30, 0, 0),
                            Name = "Project Kickoff",
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("MeetingApp.Models.Domain.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@example.com",
                            PasswordHash = "hashedpassword123",
                            Username = "JohnDoe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "janesmith@example.com",
                            PasswordHash = "hashedpassword456",
                            Username = "JaneSmith"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
